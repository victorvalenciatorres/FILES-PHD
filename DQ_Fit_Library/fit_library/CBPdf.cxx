/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

// Your description goes here...

#include "Riostream.h"

#include "CBPdf.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include <math.h>
#include "TMath.h"

ClassImp(CBPdf);

 CBPdf::CBPdf(const char *name, const char *title,
                        RooAbsReal& _x,
                        RooAbsReal& _A,
                        RooAbsReal& _B,
                        RooAbsReal& _C,
                        RooAbsReal& _D) :
   RooAbsPdf(name,title),
   x("x","x",this,_x),
   A("A","A",this,_A),
   B("B","B",this,_B),
   C("C","C",this,_C),
   D("D","D",this,_D)
 {
 }


 CBPdf::CBPdf(const CBPdf& other, const char* name) :
   RooAbsPdf(other,name),
   x("x",this,other.x),
   A("A",this,other.A),
   B("B",this,other.B),
   C("C",this,other.C),
   D("D",this,other.D)
 {
 }

 Double_t CBPdf::evaluate() const
 {
    Double_t t = (x - A) / B;
    if (C < 0){
        t = -t;
    }

    Double_t absAlpha = TMath::Abs(C);
    if (t >= -absAlpha){
        return TMath::Exp(-0.5 * t * t);
    }

    if (t < -absAlpha){
        Double_t a =  TMath::Power(D / absAlpha, D) * TMath::Exp(-0.5 * absAlpha * absAlpha);
        Double_t b = D / absAlpha - absAlpha;
        return a / TMath::Power(b - t, D);
    }
    
    return 0.;
 }
